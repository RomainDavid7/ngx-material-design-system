:host {
        border-width: 1px;
        border-style: solid;
        box-sizing: border-box;
        border-color: var(--md-sys-color-outline);
}

:host > span {
        color: var(--md-sys-color-on-surface-variant);
}

:host.selected {
        background-color: var(--md-sys-color-inverse-surface);
}

:host.selected > span {
        color: var(--md-sys-color-inverse-on-surface);
}

:host[disabled] {
        border-color: color-mix(in srgb, transparent, var(--md-sys-color-on-surface) 12%);
        background-color: color-mix(in srgb, transparent, var(--md-sys-color-on-surface) 12%);
}

:host[disabled] > span {
        color: color-mix(in srgb, transparent, var(--md-sys-color-on-surface) 38%);
}

:host:not([disabled]):hover {
        background-color: color-mix(in srgb, transparent, var(--md-sys-color-on-surface-variant) var(--md-sys-state-hover-state-layer-opacity));
}

:host.selected:not([disabled]):hover {
        background-color: color-mix(in srgb, var(--md-sys-color-on-surface-variant), var(--md-sys-color-inverse-on-surface) var(--md-sys-state-hover-state-layer-opacity));
}

:host:not([disabled]):focus-visible {
        background-color: color-mix(in srgb, transparent, var(--md-sys-color-on-surface-variant) var(--md-sys-state-focus-state-layer-opacity));
}

:host.selected:not([disabled]):focus-visible {
        background-color: color-mix(in srgb, var(--md-sys-color-on-surface-variant), var(--md-sys-color-inverse-on-surface) var(--md-sys-state-focus-state-layer-opacity));
}

:host:not([disabled]):active {
        background-color: color-mix(in srgb, transparent, var(--md-sys-color-on-surface-variant) var(--md-sys-state-pressed-state-layer-opacity));
}

:host.selected:not([disabled]):active {
        background-color: color-mix(in srgb, var(--md-sys-color-on-surface-variant), var(--md-sys-color-inverse-on-surface) var(--md-sys-state-pressed-state-layer-opacity));
}